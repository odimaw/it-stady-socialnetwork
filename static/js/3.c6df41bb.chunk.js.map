{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","MyPosts","React","memo","postsElements","posts","map","p","key","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,iBAAmB,wC,0CCArCD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,wICmDVC,EA/CgB,SAACC,GAAW,IAAD,EAGRC,oBAAS,GAHD,mBAGjCC,EAHiC,KAGvBC,EAHuB,OAIZF,mBAASD,EAAMI,QAJH,mBAIjCA,EAJiC,KAIzBC,EAJyB,KAKtCC,qBAAU,WACFD,EAAUL,EAAMI,UACrB,CAACJ,EAAMI,SAiBV,OACI,8BACMF,GACE,6BACI,0BAAMK,cAnBG,WACrBJ,GAAY,KAmBKH,EAAMI,QAAU,UAI5BF,GACG,6BACI,2BAAOM,OAtBI,WACvBL,GAAY,GAEZH,EAAMS,aAAaL,IAoBHM,WAAW,EACXC,SAlBG,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAkBVA,MAAOV,OCtBhBW,EAhBK,SAACf,GAEjB,OAAKA,EAAMgB,QAIJ,6BACH,yBAAKC,UAAWC,IAAEC,kBACd,yBAAKC,IAAKpB,EAAMgB,QAAQK,OAAOC,QAE/B,kBAAC,EAAD,CAAwBlB,OAAQJ,EAAMI,OAAQK,aAAcT,EAAMS,iBAP/D,kBAACc,EAAA,EAAD,O,4CCKAC,EAVF,SAACxB,GACV,OAAO,yBAAKiB,UAAWC,IAAEO,MACrB,yBAAKL,IAAI,+GACApB,EAAM0B,QACP,6BACJ,sCAAY1B,EAAM2B,e,kCCDxBC,EAAcC,YAAiB,IAEjCC,EAAiB,SAAC9B,GACpB,OACE,0BAAM+B,SAAU/B,EAAMgC,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcW,YAAY,iBAGhG,6BAAK,+CAIXT,EAAiBU,YAAU,CAACC,KAAM,yBAAjBD,CAA2CV,GAE5D,IAuBeY,EAvBCC,IAAMC,MAAM,SAAC5C,GAE3B,IAAI6C,EAAgB7C,EAAM8C,MACvBC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAOtB,QAASsB,EAAEtB,QAASC,WAAYqB,EAAErB,WAAYsB,IAAKD,EAAEE,QAOxE,OAAQ,yBAAKjC,UAAWC,IAAEiC,YACxB,wCACJ,kBAAC,EAAD,CAAgBpB,SAPE,SAACqB,GACfpD,EAAMqD,QAAQD,EAAOE,gBAOrB,yBAAKrC,UAAWC,IAAE4B,OACfD,O,QCjBQU,EAFUC,aAbH,SAACC,GACrB,MAAO,CACLX,MAAOW,EAAMC,YAAYZ,MACzBQ,YAAaG,EAAMC,YAAYJ,gBAGV,SAACK,GACxB,MAAO,CACLN,QAAS,SAACC,GACRK,EAASC,YAAqBN,QAIXE,CAA6Cd,GCJvDmB,EARC,SAAC7D,GAEb,OAAQ,6BACJ,kBAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQK,aAAcT,EAAMS,eAC/E,kBAAC,EAAD,Q,eCFFqD,E,kLAGE,IAAIC,EAASC,KAAKhE,MAAMiE,MAAMC,OAAOH,OAChCA,IACDA,EAAUC,KAAKhE,MAAMkD,KAEjBc,KAAKhE,MAAMmE,QAAQC,KAAK,UAGhCJ,KAAKhE,MAAMqE,eAAeN,GAC1BC,KAAKhE,MAAMsE,UAAUP,K,+BAIrB,OACI,kBAAC,EAAD,iBAAaC,KAAKhE,MAAlB,CACAgB,QAASgD,KAAKhE,MAAMgB,QAASZ,OAAQ4D,KAAKhE,MAAMI,OAC5CK,aAAcuD,KAAKhE,MAAMS,oB,GAlBVkC,IAAM4B,WA+BtBC,sBACXhB,aARkB,SAACC,GAAD,MAAY,CAC9BzC,QAASyC,EAAMC,YAAY1C,QAC3BZ,OAAQqD,EAAMC,YAAYtD,OAC1B8C,GAAIO,EAAMgB,KAAKvB,GACfwB,OAAQjB,EAAMgB,KAAKC,UAIM,CAAEL,mBAAgBC,cAAW7D,mBACtDkE,IAFWH,CAGbV","file":"static/js/3.c6df41bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1d730\"};","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    useEffect(() => {\n            setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n       \n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>\n                        {props.status || '-----'}\n                    </span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onBlur={deactivateEditMode}\n                        autoFocus={true}\n                        onChange={onStatusChange}\n                        value={status}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.jsx';\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return <div>\n        <div className={s.descriptionBlock}>\n            <img src={props.profile.photos.large}/>\n            \n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n    </div>\n\n    </div>\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return <div className={s.item}>\n        <img src='https://avatars.mds.yandex.net/get-kino-vod-films-gallery/28788/47e2fd514411e18b76af786d7417062d/280x178_2'></img>\n                {props.message}\n                <div>\n            <span>Like {props.likesCount}</span></div>\n    </div>\n\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Posts from './Posts/Post';\nimport { reduxForm, Field } from 'redux-form';\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='newPostText' component={Textarea} validate={[required, maxLength10]} placeholder='You message'/>\n         \n      </div>\n      <div><button>Add post</button></div>\n    </form>\n  )\n}\nAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\n\nconst MyPosts = React.memo( (props) => {\n\n  let postsElements = props.posts\n    .map(p => <Posts message={p.message} likesCount={p.likesCount} key={p.id} />);\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n\n  return (<div className={s.postsBlock}>\n    <h3>My posts</h3>\n<AddNewPostForm onSubmit={onAddPost}/>\n    <div className={s.posts}>\n      {postsElements}\n    </div>\n  </div>)\n});\n\n\n\n\n\nexport default MyPosts;\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n    return (<div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n        <MyPostsContainer />\n    </div>)\n}\n\nexport default Profile;\n\n\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId =  this.props.id;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n            profile={this.props.profile} status={this.props.status}\n                updateStatus={this.props.updateStatus} \n                />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    id: state.auth.id,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter,\n)(ProfileContainer);\n\n\n\n"],"sourceRoot":""}